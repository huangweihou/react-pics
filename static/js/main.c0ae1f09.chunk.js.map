{"version":3,"sources":["components/SearchBar.js","api/unsplash.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","headers","Authorization","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","description","urls","style","gridRowEnd","ref","src","regular","ImageList","images","map","key","id","className","App","onSearchBarSubmit","a","unsplash","get","params","query","response","data","results","ReactDOM","render","document","querySelector"],"mappings":"wQA8BeA,E,4MA3BbC,MAAQ,CAAEC,KAAM,I,EAEhBC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEH,KAAME,EAAME,OAAOC,S,EAGrCC,aAAe,SAACJ,GACdA,EAAMK,iBACN,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,O,uDAI/B,OACE,6BACE,0BAAMS,SAAUC,KAAKJ,cACnB,2BACEK,KAAK,OACLC,SAAUF,KAAKT,cACfI,MAAOK,KAAKX,MAAMC,QAGtB,6BAAMU,KAAKX,MAAMC,W,GAtBDa,IAAMC,W,QCAfC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,4BACTC,QAAS,CACPC,cAAe,2DCuBJC,G,wDAzBb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IASRa,SAAW,WACT,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aACrC,EAAKtB,SAAS,CAAEuB,MAAOC,KAAKC,KAAKN,EAAS,MAV1C,EAAKC,SAAWV,IAAMgB,YACtB,EAAK9B,MAAQ,CAAE2B,MAAO,GAHL,E,gEAOjBhB,KAAKa,SAASC,QAAQM,iBAAiB,OAAQpB,KAAKW,Y,+BAQ5C,IAAD,EACuBX,KAAKF,MAAMuB,MAAjCC,EADD,EACCA,YAAaC,EADd,EACcA,KACrB,OACE,yBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAUzB,KAAKX,MAAM2B,SAC3C,yBAAKU,IAAK1B,KAAKa,SAAUc,IAAKJ,EAAKK,QAASN,YAAaA,S,GApBzCnB,IAAMC,YCQfyB,EAPG,SAAC/B,GACjB,IAAMgC,EAAShC,EAAMgC,OAAOC,KAAI,SAACV,GAC/B,OAAO,kBAAC,EAAD,CAAWA,MAAOA,EAAOW,IAAKX,EAAMY,QAE7C,OAAO,yBAAKC,UAAU,cAAcJ,ICkBvBK,E,4MAnBb9C,MAAQ,CAAEyC,OAAQ,I,EAElBM,kB,uCAAoB,WAAO9C,GAAP,eAAA+C,EAAA,sEACKC,EAASC,IAAI,iBAAkB,CACpDC,OAAQ,CAAEC,MAAOnD,KAFD,OACZoD,EADY,OAIlB,EAAKjD,SAAS,CAAEqC,OAAQY,EAASC,KAAKC,UAJpB,2C,6GAQlB,OACE,6BACE,kBAAC,EAAD,CAAW7C,SAAUC,KAAKoC,oBAC1B,kBAAC,EAAD,CAAWN,OAAQ9B,KAAKX,MAAMyC,c,GAdpB3B,IAAMC,WCDxByC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.c0ae1f09.chunk.js","sourcesContent":["import React from \"react\";\n\nclass SearchBar extends React.Component {\n  state = { term: \"\" };\n\n  onInputChange = (event) => {\n    this.setState({ term: event.target.value });\n  };\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.term);\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.onFormSubmit}>\n          <input\n            type=\"text\"\n            onChange={this.onInputChange}\n            value={this.state.term}\n          />\n        </form>\n        <div>{this.state.term}</div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \" https://api.unsplash.com\",\n  headers: {\n    Authorization: \"Client-ID vaEVAcM2Q1CRzPmDjHmjUzfoyjoUvaVH4nzQa1hwm9o\",\n  },\n});\n","import React from \"react\";\n\nclass ImageCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.imageRef = React.createRef();\n    this.state = { spans: 0 };\n  }\n\n  componentDidMount() {\n    this.imageRef.current.addEventListener(\"load\", this.setSpans);\n  }\n\n  setSpans = () => {\n    const height = this.imageRef.current.clientHeight;\n    this.setState({ spans: Math.ceil(height / 1) });\n  };\n\n  render() {\n    const { description, urls } = this.props.image;\n    return (\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n        <img ref={this.imageRef} src={urls.regular} description={description} />\n      </div>\n    );\n  }\n}\n\nexport default ImageCard;\n","import React from \"react\";\nimport \"./ImageList.css\";\nimport ImageCard from \"./ImageCard\";\nconst ImageList = (props) => {\n  const images = props.images.map((image) => {\n    return <ImageCard image={image} key={image.id} />;\n  });\n  return <div className=\"image-list\">{images}</div>;\n};\n\nexport default ImageList;\n","import React from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport unsplash from \"../api/unsplash\";\nimport ImageList from \"./ImageList\";\n\nclass App extends React.Component {\n  state = { images: [] };\n\n  onSearchBarSubmit = async (term) => {\n    const response = await unsplash.get(\"/search/photos\", {\n      params: { query: term },\n    });\n    this.setState({ images: response.data.results });\n  };\n\n  render() {\n    return (\n      <div>\n        <SearchBar onSubmit={this.onSearchBarSubmit} />\n        <ImageList images={this.state.images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}